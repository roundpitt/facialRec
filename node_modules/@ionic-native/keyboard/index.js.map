{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/keyboard/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,iBAAiB,EAAE,MAAM,oBAAoB,CAAC;AACxE,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;;;;;;;;;;;;;;;;;;;IA4Bf,4BAAiB;;;;IAE7C;;;OAGG;;;;;IAEH,2CAAwB;;;;cAAC,IAAa,KAAW;IAEjD;;OAEG;;;;IAKH,uBAAI;;;mBAAY;IAEhB;;OAEG;;;;IAKH,wBAAK;;;mBAAY;IAEjB;;;OAGG;;;;;IAKH,gCAAa;;;;cAAC,OAAgB,KAAW;IAEzC;;;OAGG;;;;;IAMH,iCAAc;;;;kBAAsB,MAAM,CAAC,EAAE;IAE7C;;;OAGG;;;;;IAMH,iCAAc;;;;kBAAsB,MAAM,CAAC,EAAE;;gBA1D9C,UAAU;;;;;QAOR,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;;;;4DACyB;;QAKhD,OAAO,CAAC;YACP,IAAI,EAAE,IAAI;YACV,SAAS,EAAE,CAAC,SAAS,EAAE,eAAe,EAAE,SAAS,CAAC;SACnD,CAAC;;;;wCACc;;QAKf,OAAO,CAAC;YACP,IAAI,EAAE,IAAI;YACV,SAAS,EAAE,CAAC,KAAK,EAAE,SAAS,EAAE,eAAe,EAAE,SAAS,CAAC;SAC1D,CAAC;;;;yCACe;;QAMhB,OAAO,CAAC;YACP,IAAI,EAAE,IAAI;YACV,SAAS,EAAE,CAAC,KAAK,EAAE,SAAS,CAAC;SAC9B,CAAC;;;;iDACuC;;QAMxC,OAAO,CAAC;YACP,eAAe,EAAE,IAAI;YACrB,KAAK,EAAE,qBAAqB;YAC5B,SAAS,EAAE,CAAC,KAAK,EAAE,SAAS,EAAE,eAAe,EAAE,SAAS,CAAC;SAC1D,CAAC;;;wCACgB,UAAU;kDAAiB;;QAM5C,OAAO,CAAC;YACP,eAAe,EAAE,IAAI;YACrB,KAAK,EAAE,qBAAqB;YAC5B,SAAS,EAAE,CAAC,KAAK,EAAE,SAAS,EAAE,eAAe,EAAE,SAAS,CAAC;SAC1D,CAAC;;;wCACgB,UAAU;kDAAiB;;;;;;;;;;;;;;;;;;IAzDlC,QAAQ;QARpB,MAAM,CAAC;YACN,UAAU,EAAE,UAAU;YACtB,MAAM,EAAE,uBAAuB;YAC/B,SAAS,EAAE,0BAA0B;YACrC,IAAI,EAAE,qDAAqD;YAC3D,SAAS,EAAE,CAAC,SAAS,EAAE,eAAe,EAAE,KAAK,EAAE,SAAS,CAAC;SAC1D,CAAC;OAEW,QAAQ,EA2DpB;mBAzFD;EA8B8B,iBAAiB;SAAlC,QAAQ","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n\r\n/**\r\n * @name Keyboard\r\n * @description\r\n * @usage\r\n * ```typescript\r\n * import { Keyboard } from '@ionic-native/keyboard';\r\n *\r\n * constructor(private keyboard: Keyboard) { }\r\n *\r\n * ...\r\n *\r\n * this.keyboard.show();\r\n *\r\n * this.keyboard.close();\r\n *\r\n * ```\r\n */\r\n@Plugin({\r\n  pluginName: 'Keyboard',\r\n  plugin: 'ionic-plugin-keyboard',\r\n  pluginRef: 'cordova.plugins.Keyboard',\r\n  repo: 'https://github.com/ionic-team/ionic-plugin-keyboard',\r\n  platforms: ['Android', 'BlackBerry 10', 'iOS', 'Windows']\r\n})\r\n@Injectable()\r\nexport class Keyboard extends IonicNativePlugin {\r\n\r\n  /**\r\n   * Hide the keyboard accessory bar with the next, previous and done buttons.\r\n   * @param hide {boolean}\r\n   */\r\n  @Cordova({ sync: true })\r\n  hideKeyboardAccessoryBar(hide: boolean): void { }\r\n\r\n  /**\r\n   * Force keyboard to be shown.\r\n   */\r\n  @Cordova({\r\n    sync: true,\r\n    platforms: ['Android', 'BlackBerry 10', 'Windows']\r\n  })\r\n  show(): void { }\r\n\r\n  /**\r\n   * Close the keyboard if open.\r\n   */\r\n  @Cordova({\r\n    sync: true,\r\n    platforms: ['iOS', 'Android', 'BlackBerry 10', 'Windows']\r\n  })\r\n  close(): void { }\r\n\r\n  /**\r\n   * Prevents the native UIScrollView from moving when an input is focused.\r\n   * @param disable {boolean}\r\n   */\r\n  @Cordova({\r\n    sync: true,\r\n    platforms: ['iOS', 'Windows']\r\n  })\r\n  disableScroll(disable: boolean): void { }\r\n\r\n  /**\r\n   * Creates an observable that notifies you when the keyboard is shown. Unsubscribe to observable to cancel event watch.\r\n   * @returns {Observable<any>}\r\n   */\r\n  @Cordova({\r\n    eventObservable: true,\r\n    event: 'native.keyboardshow',\r\n    platforms: ['iOS', 'Android', 'BlackBerry 10', 'Windows']\r\n  })\r\n  onKeyboardShow(): Observable<any> { return; }\r\n\r\n  /**\r\n   * Creates an observable that notifies you when the keyboard is hidden. Unsubscribe to observable to cancel event watch.\r\n   * @returns {Observable<any>}\r\n   */\r\n  @Cordova({\r\n    eventObservable: true,\r\n    event: 'native.keyboardhide',\r\n    platforms: ['iOS', 'Android', 'BlackBerry 10', 'Windows']\r\n  })\r\n  onKeyboardHide(): Observable<any> { return; }\r\n\r\n}\r\n"]}